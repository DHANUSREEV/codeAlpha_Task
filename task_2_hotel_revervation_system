// HotelManagerApp.java (Final Version - Fullscreen Background and Logo Page Fixed)

import javax.swing.*;
import javax.swing.border.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.Calendar;
import java.util.Date;

public class HotelManagerApp extends JFrame {
    CardLayout layout;
    JPanel mainPanel;

    JTextField phoneField, otpField;
    JLabel logoLabel;

    JTextField nameField, daysField, membersField;
    JComboBox<String> statusBox;
    JSpinner checkInSpinner, exitSpinner;
    File selectedFile;
    JButton uploadBtn;

    public HotelManagerApp() {
        setTitle("Bliss Stay - Manager Panel");
        setSize(800, 600);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        // ✅ Scalable background
        setContentPane(new JPanel() {
            private Image bg = new ImageIcon("bg.jpg").getImage();
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                g.drawImage(bg, 0, 0, getWidth(), getHeight(), this);
            }
        });

        setLayout(new BorderLayout());

        layout = new CardLayout();
        mainPanel = new JPanel(layout);
        mainPanel.setOpaque(false);

        mainPanel.add(phonePanel(), "Phone");
        mainPanel.add(otpPanel(), "OTP");
        mainPanel.add(logoPanel(), "Logo");
        mainPanel.add(bookingPanel(), "Booking");

        add(mainPanel);
        layout.show(mainPanel, "Phone");
    }

    JPanel phonePanel() {
        JPanel panel = new JPanel(new GridLayout(3, 1, 10, 10));
        panel.setOpaque(false);
        panel.setBorder(new EmptyBorder(150, 200, 150, 200));

        JLabel label = new JLabel("Enter Customer Phone Number:");
        label.setFont(new Font("Arial", Font.BOLD, 18));
        phoneField = new JTextField();
        JButton next = new JButton("Send OTP");
        next.addActionListener(e -> {
            if (phoneField.getText().trim().matches("\\d{10}")) {
                JOptionPane.showMessageDialog(this, "OTP sent (Hint: 1234)");
                layout.show(mainPanel, "OTP");
            } else JOptionPane.showMessageDialog(this, "Invalid phone number");
        });

        styleField(phoneField);
        styleButton(next);

        panel.add(label); panel.add(phoneField); panel.add(next);
        return panel;
    }

    JPanel otpPanel() {
        JPanel panel = new JPanel(new GridLayout(3, 1, 10, 10));
        panel.setOpaque(false);
        panel.setBorder(new EmptyBorder(150, 200, 150, 200));

        JLabel label = new JLabel("Enter OTP:");
        label.setFont(new Font("Arial", Font.BOLD, 18));
        otpField = new JTextField();
        JButton verify = new JButton("Verify");
        verify.addActionListener(e -> {
            if (otpField.getText().trim().equals("1234")) {
                layout.show(mainPanel, "Logo");
                Timer t = new Timer(2000, evt -> layout.show(mainPanel, "Booking"));
                t.setRepeats(false); t.start();
            } else JOptionPane.showMessageDialog(this, "Invalid OTP");
        });

        styleField(otpField);
        styleButton(verify);
        panel.add(label); panel.add(otpField); panel.add(verify);
        return panel;
    }

    JPanel logoPanel() {
        JPanel panel = new JPanel(new BorderLayout());
        panel.setOpaque(false);
        logoLabel = new JLabel(new ImageIcon("logo.png"));
        logoLabel.setHorizontalAlignment(JLabel.CENTER);
        panel.add(logoLabel, BorderLayout.CENTER);
        return panel;
    }

    JPanel bookingPanel() {
        JPanel panel = new JPanel(new GridLayout(9, 2, 10, 10));
        panel.setOpaque(false);
        panel.setBorder(new EmptyBorder(30, 80, 30, 80));

        nameField = new JTextField();
        nameField.setDocument(new javax.swing.text.PlainDocument() {
            public void insertString(int offs, String str, javax.swing.text.AttributeSet a) throws javax.swing.text.BadLocationException {
                if (str == null) return;
                super.insertString(offs, str.toUpperCase(), a);
            }
        });

        Date today = new Date();
        SpinnerDateModel checkInModel = new SpinnerDateModel(today, null, null, Calendar.DAY_OF_MONTH);
        checkInSpinner = new JSpinner(checkInModel);
        checkInSpinner.setEditor(new JSpinner.DateEditor(checkInSpinner, "yyyy-MM-dd"));

        SpinnerDateModel exitModel = new SpinnerDateModel(today, null, null, Calendar.DAY_OF_MONTH);
        exitSpinner = new JSpinner(exitModel);
        exitSpinner.setEditor(new JSpinner.DateEditor(exitSpinner, "yyyy-MM-dd"));
        exitSpinner.setEnabled(false);

        daysField = new JTextField();
        membersField = new JTextField();

        statusBox = new JComboBox<>(new String[]{"Local", "Outstation", "Foreigner"});

        uploadBtn = new JButton("Upload Customer Image");
        uploadBtn.addActionListener(e -> {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Select Customer Image");

            // ✅ Accept only image files
            fc.setFileFilter(new javax.swing.filechooser.FileFilter() {
                @Override
                public boolean accept(File f) {
                    return f.isDirectory() || f.getName().toLowerCase().matches(".*\\.(jpg|jpeg|png)$");
                }

                @Override
                public String getDescription() {
                    return "Image Files (*.jpg, *.jpeg, *.png)";
                }
            });

            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                selectedFile = fc.getSelectedFile();
                uploadBtn.setText("Uploaded: " + selectedFile.getName());

                // ✅ Optional: preview image (e.g., below the form)
                // ImageIcon img = new ImageIcon(selectedFile.getAbsolutePath());
                // JLabel preview = new JLabel(new ImageIcon(img.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH)));
                // panel.add(preview);
                // panel.revalidate();
            }
        });

        JButton submit = new JButton("Submit Booking");
        submit.addActionListener(e -> processBooking());

        styleField(nameField); styleField(daysField); styleField(membersField);
        styleButton(uploadBtn); styleButton(submit);
        styleSpinner(checkInSpinner); styleSpinner(exitSpinner);

        daysField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent e) {
                updateExitDate();
            }
        });

        panel.add(new JLabel("Customer Name:")); panel.add(nameField);
        panel.add(new JLabel("Check-In Date:")); panel.add(checkInSpinner);
        panel.add(new JLabel("Number of Days:")); panel.add(daysField);
        panel.add(new JLabel("Exit Date:")); panel.add(exitSpinner);
        panel.add(new JLabel("Residential Status:")); panel.add(statusBox);
        panel.add(new JLabel("Customer Image:")); panel.add(uploadBtn);
        panel.add(new JLabel("Number of Members:")); panel.add(membersField);
        panel.add(new JLabel("")); panel.add(submit);

        return panel;
    }

    void updateExitDate() {
        try {
            int days = Integer.parseInt(daysField.getText().trim());
            Date inDate = (Date)checkInSpinner.getValue();
            Calendar cal = Calendar.getInstance();
            cal.setTime(inDate);
            cal.add(Calendar.DAY_OF_MONTH, days);
            exitSpinner.setValue(cal.getTime());
        } catch (Exception ignored) {
        }
    }

    void processBooking() {
        if (nameField.getText().isEmpty() || checkInSpinner.getValue() == null ||
                daysField.getText().isEmpty() || membersField.getText().isEmpty() || selectedFile == null) {
            JOptionPane.showMessageDialog(this, "Please fill all fields and upload certificate.");
            return;
        }
        JOptionPane.showMessageDialog(this, "✅ Booking submitted successfully for " + nameField.getText());
    }

    void styleField(JTextField field) {
        field.setPreferredSize(new Dimension(200, 30));
        field.setFont(new Font("Arial", Font.PLAIN, 14));
    }

    void styleSpinner(JSpinner spinner) {
        spinner.setPreferredSize(new Dimension(200, 30));
        spinner.setFont(new Font("Arial", Font.PLAIN, 14));
    }

    void styleButton(JButton btn) {
        btn.setBackground(new Color(255, 182, 193));
        btn.setFont(new Font("Arial", Font.BOLD, 14));
        btn.setForeground(Color.DARK_GRAY);
        btn.setFocusPainted(false);
        btn.setBorder(new LineBorder(Color.PINK));
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new HotelManagerApp().setVisible(true));
    }
}
